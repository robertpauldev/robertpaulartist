////////////
// Mixins //
////////////

// Box shadow
.box-shadow(@shadow) {
	-moz-box-shadow: @shadow;
	-webkit-box-shadow: @shadow;
	box-shadow: @shadow;
}

// Box sizing
.box-sizing(@type: border-box) {
	-moz-box-sizing: @type;
	-webkit-box-sizing: @type;
	box-sizing: @type;
}

// Clearfix
.clearfix {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

// Grid
.grid(@display: grid) {
	display: ~"-ms-@{display}";
	display: @display;
}

// Flexbox > Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-ms-@{display}box";
	display: @display;
}

// Flexbox > The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
	-webkit-flex: @columns;
	-ms-flex: @columns;
	flex: @columns;
}

// Flexbox > Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
	-webkit-flex-direction: @direction;
	-ms-flex-direction: @direction;
	flex-direction: @direction;
}

// Flexbox > Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
	-webkit-flex-wrap: @wrap;
	-ms-flex-wrap: @wrap;
	flex-wrap: @wrap;
}

// Flexbox > Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
	-webkit-flex-flow: @flow;
	-ms-flex-flow: @flow;
	flex-flow: @flow;
}

// Flexbox > Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
	-webkit-order: @order;
	-ms-order: @order;
	order: @order;
}

// Flexbox > Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
	-webkit-flex-grow: @grow;
	-ms-flex-grow: @grow;
	flex-grow: @grow;
}

// Flexbox > Flex shrink
// - applies to: flex item shrink factor
// <number>
.flex-shrink(@shrink: 1) {
	-webkit-flex-shrink: @shrink;
	-ms-flex-shrink: @shrink;
	flex-shrink: @shrink;
}

// Flexbox > Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
.flex-basis(@width: auto) {
	-webkit-flex-basis: @width;
	-ms-flex-basis: @width;
	flex-basis: @width;
}

// Flexbox > Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
.justify-content(@justify: flex-start) {
	-webkit-justify-content: @justify;
	-ms-justify-content: @justify;
	justify-content: @justify;
}

// Flexbox > Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
	-webkit-align-content: @align;
	-ms-align-content: @align;
	align-content: @align;
}

// Flexbox > Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
.align-items(@align: stretch) {
	-webkit-align-items: @align;
	-ms-align-items: @align;
	align-items: @align;
}

// Flexbox > Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
	-webkit-align-self: @align;
	-ms-align-self: @align;
	align-self: @align;
}

// Transition
.transition(@transition) {
	-moz-transition: @transition;
	-webkit-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

// Transform
.transform(@transform) {
	-moz-transform: @transform;
	-webkit-transform: @transform;
	-o-transform: @transform;
	transform: @transform;
}

// Body Copy
.body-copy() {
	line-height: 150%;
	.font__serif();
	font-size: 1.7rem;
	color: @colour__body_copy;
}
