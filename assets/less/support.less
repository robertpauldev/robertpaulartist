////////////////////
// Supports: Grid //
////////////////////

@supports ((display: -ms-grid) or (display: grid)) {

	// Projects
	.projects {
		.grid();
		grid-gap: 20px 20px;
	}

	// Blog
	.blog {
		.wrap--grid {
			grid-gap: 30px 30px;
		}
	}

	@media screen and (max-width: 480px) {

		// Projects
		.projects {
			grid-template-columns: repeat(2, 1fr);
		}

		// Blog
		.blog {
			.wrap--grid {
				grid-template-columns: 1fr;
			}
		}
	}

	@media screen and (min-width: 481px) and (max-width: 767px) {

		// Projects
		.projects {
			grid-template-columns: repeat(3, 1fr);
		}
	
		// Blog
		.blog {
			.wrap--grid {
				grid-template-columns: repeat(2, 1fr);
			}
		}
	}

	@media screen and (min-width: 768px) and (max-width: 1024px) {

		// Projects
		.projects {
			grid-template-columns: repeat(4, 1fr);
		}
	
		// Blog
		.blog {
			.wrap--grid {
				grid-template-columns: repeat(3, 1fr);
			}
		}
	}

	@media screen and (min-width: 1025px) {

		// Projects
		.projects {
			grid-template-columns: repeat(6, 1fr);
		}
	
		// Blog
		.blog {
			.wrap--grid {
				grid-template-columns: repeat(4, 1fr);
			}
		}
	}
}

//////////////////////
// No Support: Grid //
//////////////////////

@supports not ((display: -ms-grid) or (display: grid)) {

	// Projects
	.projects {
		margin-left: -15px;
		margin-right: -15px;

		&:after {
			content: '';
			display: block;
			clear: both;
		}
	}

	.project__item {
		float: left;
		padding: 15px;
	}

	// Blog
	.blog {

		.wrap--grid {
			&:after {
				content: '';
				display: block;
				clear: both;
			}
		}

		.blog-post {
			margin-bottom: 30px;
		}
	}

	@media screen and (max-width: 480px) {

		// Projects
		.project__item {
			float: none;
		}
	}

	@media screen and (min-width: 481px) and (max-width: 767px) {

		// Projects
		.project__item {
			width: 25%;
		}
	}

	@media screen and (min-width: 768px) {

		// Projects
		.project__item {
			width: 16.66%;
		}

		// Blog
		.blog {
			.blog-post {
				float: left;
				padding-left: 15px;
				padding-right: 15px;
				width: 33.33%;

				&:nth-child(3n+1) {
					clear: both;
				}
			}
		}
	}
}